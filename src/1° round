#include <Servo.h>
#include <Wire.h>
#include <Adafruit_TCS34725.h>

// Inicializa el sensor TCS34725
Adafruit_TCS34725 tcs = Adafruit_TCS34725();

//Derecha
const int trigPin1 = 5;  // Pin digital conectado al Trig del primer sensor
const int echoPin1 = 4; // Pin digital conectado al Echo del primer sensor
//Izquierda
const int trigPin2 = 7; // Pin digital conectado al Trig del segundo sensor
const int echoPin2 = 6; // Pin digital conectado al Echo del segundo sensor

//MOTOR DRIVER
const int AIN1 = 8;
const int AIN2 = 9;
const int PWMA = 10;
const int STBY = 11;


bool naranja = false;
bool azul = false;

int aux = 0;

uint16_t clear, red, green, blue;
float Rojo_Frec, Verde_Frec, Azul_Frec;

Servo Dir;

int pos = 0;
float izq = 0;
float der = 0;

void setup() {
  Dir.attach(3); 

  pinMode(AIN1, OUTPUT);
  pinMode(AIN2, OUTPUT);
  pinMode(PWMA, OUTPUT);
  pinMode(STBY, OUTPUT);

  digitalWrite(STBY, HIGH); // Habilitar el chip
  
  Serial.begin(9600); // Inicializa la comunicación serie
  //Derecha
  pinMode(trigPin1, OUTPUT); // Configura el pin Trig del primer sensor como salida
  pinMode(echoPin1, INPUT);  // Configura el pin Echo del primer sensor como entrada
  //Izquierda
  pinMode(trigPin2, OUTPUT); // Configura el pin Trig del segundo sensor como salida
  pinMode(echoPin2, INPUT);  // Configura el pin Echo del segundo sensor como entrada

  if (tcs.begin()) {
    Serial.println("Sensor TCS34725 encontrado.");
  } else {
    Serial.println("No se pudo encontrar el sensor TCS34725.");
    while (1);
  }

  Wire.begin();

}

void alinear() {
  Dir.write(130);
  delay(1000);
  Dir.write(65);
  delay(1000);
  Dir.write(100);
  delay(2000);
}

void motor_start() {
  digitalWrite(AIN1, HIGH);
  digitalWrite(AIN2, LOW);
  analogWrite(PWMA, 128); // velocidad 50% 
  delay(1000);
}

void motor_stop() {
  analogWrite(PWMA, 0);
  delay(1000);
}

//distancia derecha
void dist_der() {
  long duration1 = getDistance(trigPin1, echoPin1);
  float distance1 = duration1 * 0.034 / 2;
  der = distance1;
  Serial.print("Distancia der: ");
  Serial.print(distance1);
  Serial.println(" cm");
}

//distancia izquierda
void dist_izq() {
  long duration2 = getDistance(trigPin2, echoPin2);
  float distance2 = duration2 * 0.034 / 2;
  izq = distance2;
  Serial.print("Distancia izq: ");
  Serial.print(distance2);
  Serial.println(" cm");
}

void detectnaranja() {
  if (Rojo_Frec >= 15 && Rojo_Frec <= 22) {
    /*Serial.println(" *** DETECTANDO LINEA NARANJA - PASO 1 COMPLETO ***");
    Serial.print(" R= "); Serial.print(Rojo_Frec);
    Serial.print(" V= "); Serial.print(Verde_Frec);
    Serial.print(" A= "); Serial.println(Azul_Frec);*/
    
    if (Verde_Frec >= 14 && Verde_Frec <= 22) {
      /*Serial.println(" *** DETECTANDO LINEA NARANJA - PASO 2 COMPLETO***");
      Serial.print(" R= "); Serial.print(Rojo_Frec);
      Serial.print(" V= "); Serial.print(Verde_Frec);
      Serial.print(" A= "); Serial.println(Azul_Frec);*/

      if (Azul_Frec >= 8 && Azul_Frec <= 17) {
        /*Serial.println(" *** DETECTANDO LINEA NARANJA - PASO 3 COMPLETO***");
        Serial.print(" R= "); Serial.print(Rojo_Frec);
        Serial.print(" V= "); Serial.print(Verde_Frec);
        Serial.print(" A= "); Serial.println(Azul_Frec);*/
        
        naranja = true;
      }
    }
  }
}

void detectazul() {
  if (Rojo_Frec >= 3 && Rojo_Frec <= 14) {
    /*Serial.println(" *** DETECTANDO LINEA AZUL - PASO 1 COMPLETO ***");
    Serial.print(" R= "); Serial.print(Rojo_Frec);
    Serial.print(" V= "); Serial.print(Verde_Frec);
    Serial.print(" A= "); Serial.println(Azul_Frec);*/
    
    if (Verde_Frec >= 6 && Verde_Frec <= 18) {
      /*Serial.println(" *** DETECTANDO LINEA AZUL - PASO 2 COMPLETO***");
      Serial.print(" R= "); Serial.print(Rojo_Frec);
      Serial.print(" V= "); Serial.print(Verde_Frec);
      Serial.print(" A= "); Serial.println(Azul_Frec);*/

      if (Azul_Frec >= 11 && Azul_Frec <= 27) {
        /*Serial.println(" *** DETECTANDO LINEA AZUL - PASO 3 COMPLETO***");
        Serial.print(" R= "); Serial.print(Rojo_Frec);
        Serial.print(" V= "); Serial.print(Verde_Frec);
        Serial.print(" A= "); Serial.println(Azul_Frec);*/
        
        azul = true;
      }
    }
  }
}

void loop() {

 // Lee los datos del sensor de color
  tcs.getRawData(&red, &green, &blue, &clear);
  // Calcular frecuencias para comparación
  Rojo_Frec = red;
  Verde_Frec = green;
  Azul_Frec = blue;

  azul = false;
  naranja = false;
  
  if (aux == 0){
    alinear();
    Serial.println("aleneó");
  }

  delay(150);  // Retraso para evitar lecturas excesivas

  if (aux == 0){
    motor_start();
    Serial.println("encendió motor");
    aux = 1; 
  }

  //ver naranja
  if (Rojo_Frec >= 15 && Rojo_Frec <= 28) {
     Serial.println("naranja1");
     Serial.print(" R= "); Serial.print(Rojo_Frec);
        Serial.print(" V= "); Serial.print(Verde_Frec);
        Serial.print(" A= "); Serial.println(Azul_Frec);
    if (Verde_Frec >= 13 && Verde_Frec <= 22) {
      Serial.println("naranja2");
      Serial.print(" R= "); Serial.print(Rojo_Frec);
        Serial.print(" V= "); Serial.print(Verde_Frec);
        Serial.print(" A= "); Serial.println(Azul_Frec);
      if (Azul_Frec >= 7 && Azul_Frec <= 17) {
        Serial.println("naranja3");
        Serial.print(" R= "); Serial.print(Rojo_Frec);
        Serial.print(" V= "); Serial.print(Verde_Frec);
        Serial.print(" A= "); Serial.println(Azul_Frec);

        Dir.write(140);
        Serial.println("derecha");
        detectazul();
        if (azul = true){
          Serial.println("detecto azul");
          delay(1000);
          Dir.write(100);
          Serial.println("se alineó");
        }
      }
    }
  }  

  if (Rojo_Frec >= 3 && Rojo_Frec <= 14) {
        Serial.println("azul1");
        Serial.print(" R= "); Serial.print(Rojo_Frec);
        Serial.print(" V= "); Serial.print(Verde_Frec);
        Serial.print(" A= "); Serial.println(Azul_Frec);
    if (Verde_Frec >= 6 && Verde_Frec <= 18) {
        Serial.println("azul2");
        Serial.print(" R= "); Serial.print(Rojo_Frec);
        Serial.print(" V= "); Serial.print(Verde_Frec);
        Serial.print(" A= "); Serial.println(Azul_Frec);
      if (Azul_Frec >= 11 && Azul_Frec <= 27) {
        Serial.println("azul3");
        Serial.print(" R= "); Serial.print(Rojo_Frec);
        Serial.print(" V= "); Serial.print(Verde_Frec);
        Serial.print(" A= "); Serial.println(Azul_Frec);
        Dir.write(50);
        Serial.println("izq");
        detectnaranja();
        if (naranja = true){
          Serial.println("detecto naraja");
          delay(1000);
          Dir.write(100);
          Serial.println("se alineó");
        }
      }
    }
  } else  {
    Serial.println("nada");
    Serial.print(" NADAR= "); Serial.print(Rojo_Frec);
    Serial.print(" NADAV= "); Serial.print(Verde_Frec);
    Serial.print(" NADAA= "); Serial.println(Azul_Frec);
  
  }

// Girar según las distancias medidas
  dist_der();
  dist_izq();
  motor_start();
    

  if (der <= 10) {
    Serial.println("izquierda");
    Dir.write(85);  // muy pegado a la derecha
    delay(500);
    Dir.write(115);
    delay(100);
    Dir.write(100);
  
  } else if (izq <= 10) {
    Serial.println("derecha");
    Dir.write(115);  // muy pegado a la izquierda
    delay(500);
    Dir.write(85);
    delay(100);
    Dir.write(100);

 } else {
    Dir.write(100);  // centro
    Serial.println("centro");
  }
  

  // Esperar un momento antes de la siguiente medición
  delay(1000);
}



long getDistance(int trigPin, int echoPin) {
  // Genera un pulso de 10 microsegundos en el pin Trig
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  
  // Lee el tiempo en microsegundos del pulso en el pin Echo
  long duration = pulseIn(echoPin, HIGH);
  
  return duration;

}
